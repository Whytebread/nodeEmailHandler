These steps will help you configure and run this mail server. 

- Copy all this code into a project folder in VS Code and/or a repository on GitHub, and connect it to render.com 
- Node setup:
  - Do NOT type npm init -y (already have a package.json)
  - Instead, type "npm install" (this will install the dependencies listed in package.json, including nodemailer)
- When ready (see below first!) type "node server.js" (to start it up)

Configuring the code: 
- Nodemailer credentials: 
  - In the sendMail function in server.js: 
    - Under "auth:" set "user:" and "pass:" (this is where your gmail email address and password go) 
- Destination Email: 
  - Look for: "let mailOptions = {"
    - from: (change to whatever you want the user to see as the "from" address)
    - to: (set to the destination email -- this is the company employee who will handle the incoming form data)
- In addition, if you use the index.html file in this project for the front end, you'll need to adjust the "serverUrl" pointer in main.js

Notes: 
- You do NOT make an account with Nodemailer
- Nodemailer just uses an existing mail service (your account) 
- This project is set up to use a gmail account
- This requires you to put your password in the server.js code. This is why you want to make a new gmail account for this, because you'll be putting your email address and password into a public repository on GitHub! 



Alternative code for Zoho Mail: 


function sendEmail(formData, callback) {
  // Create a transporter object for Zoho Mail
  let transporter = nodemailer.createTransport({
    host: 'smtp.zoho.com',
    port: 465,
    secure: true, // use SSL
    auth: {
      user: 'your-email@yourdomain.com', // Your Zoho email address
      pass: 'your-zoho-password'         // Your Zoho password
    }
  });
  
  // Construct email content
  let emailContent = 'New Form Submission:\n\n';
  for (let key in formData) {
    emailContent += key + ': ' + formData[key] + '\n';
  }
  
  // Setup email data
  let mailOptions = {
    from: 'your-email@yourdomain.com',     // Your Zoho email (same as above)
    to: 'recipient-email@example.com',     // Where to send form submissions
    subject: 'New Form Submission',
    text: emailContent
  };
  
  // Send mail with defined transport object
  transporter.sendMail(mailOptions, callback);
}

